# Maintainer: DJ Lucas <dj_AT_linuxfromscratch_DOT_org>

pkgbase=gcc
pkgname=('gcc-ada'
         'gcc-fortran'
         'gcc-go'
         'gcc-objc'
         'gcc')
pkgver=7.2.0
_islver=0.18
pkgrel=3
arch=('x86_64')
url="https://gcc.gnu.org/"
license=('GPL'
         'LGPL'
         'FDL'
         'custom')
makedepends=('bash'
             'binutils'
             'coreutils'
             'diffutils'
             'findutils'
             'gawk' 
             'gcc'
             'gettext'
             'glibc'
             'gmp'
             'grep'
             'gtk2'
             'm4'
             'make'
             'mpc'
             'mpfr'
             'patch'
             'perl'
             'sed'
             'tar'
             'texinfo')
checkdepends=('dejagnu'
              'inetutils')
source=("https://ftp.gnu.org/gnu/${pkgbase}/${pkgbase}-${pkgver}/${pkgbase}-${pkgver}.tar.xz"
        "http://isl.gforge.inria.fr/isl-${_islver}.tar.bz2"
        "gnat-gpl-2017-x86_64-linux-bin.tar.gz::http://mirrors.cdn.adacore.com/art/591c6d80c7a447af2deed1d7")
noextract=("gnat-gpl-2017-x86_64-linux-bin.tar.gz")

# If you want to modify what is actually built for a local build, set these 0
_build_ada=1
_build_cpp=1
_build_fortran=1
_build_go=1
_build_objc=1

_confargs=""
_languages="c,c++,lto"

# For now, always rebuild ada
#_have_ada=$(pacman -Q gcc-ada > /dev/null 2>&1 && echo "1" || echo "0")

prepare(){
  cd ${srcdir}/${pkgbase}-${pkgver}

  # link isl for in-tree build
  ln -s ../isl-${_islver} isl

  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

  # adjust libdir for x86_64
  sed -e '/m64=/s/lib64/lib/' \
      -i.orig gcc/config/i386/t-linux64
  mkdir build

  # Use system libffi
  sed -i 's/\(install.*:\) install-.*recursive/\1/' libffi/Makefile.in
  sed -i 's/\(install-data-am:\).*/\1/' libffi/include/Makefile.in

  if [[ "x${_build_ada}" == "x1" ]]; then
#    if [[ "${_have_ada}" == "1" ]]; then
#      echo "gcc-ada is installed, not installing temporary GNAT."
#    else
#      echo "gcc-ada is not installed, installing temporary Ada Core."
      cd ${srcdir}
      tar -xf gnat-gpl-2017-x86_64-linux-bin.tar.gz
      cd ${srcdir}/gnat-gpl-2017-x86_64-linux-bin
      make ins-all prefix=${srcdir}/gnat 
      find ${srcdir}/gnat -name ld -exec mv -v {} {}.old \;
      find ${srcdir}/gnat -name as -exec mv -v {} {}.old \;
#    fi
  fi
}

build(){
  cd "${srcdir}/${pkgbase}-${pkgver}/build"

  # Handle options
  if [[ "x${_build_ada}" == "x1" ]]; then
    _languages="${_languages},ada"
    # Only bootstrap if we don't already hava ada installed
    if [[ "${_have_ada}" == "1" ]]; then
      _confargs="${_confargs} --disable-bootstrap"
    else
      export PATH=${srcdir}/gnat/bin:${PATH}
    fi
  fi

  if [[ "x${_build_fortran}" == "x1" ]]; then
    _languages="${_languages},fortran"
  fi

  if [[ "x${_build_go}" == "x1" ]]; then
    _languages="${_languages},go"
  fi

  if [[ "x${_build_objc}" == "x1" ]]; then
    _languages="${_languages},objc,obj-c++"
  fi

  # using -pipe causes spurious test-suite failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  CFLAGS=${CFLAGS/-pipe/}
  CXXFLAGS=${CXXFLAGS/-pipe/}

  ../configure                           \
       --prefix=/usr                     \
       --libdir=/usr/lib                 \
       --disable-multilib                \
       --with-system-zlib                \
       ${_confargs}                      \
       --enable-languages=${_languages}
  make

  # Install to temp location and extract split packages from there
  make DESTDIR=${srcdir}/gcc-dest install
}

check(){
  cd ${srcdir}/${pkgbase}-${pkgver}/build
  make -k check || true
  ${srcdir}/${pkgbase}-${pkgver}/contrib/test_summary
}

package_gcc-ada(){
  pkgdesc="The GCC package contains the GNU compiler collection (Ada front-end)"
  depends=("gcc=${pkgver}-${pkgrel}")
  options=('staticlibs' '!emptydirs')

  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/ada* \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}
  install -vdm755 ${pkgdir}/usr/libexec/gcc/$CARCH-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/libexec/gcc/$CARCH-pc-linux-gnu/${pkgver}/gnat1 \
        ${pkgdir}/usr/libexec/gcc/$CARCH-pc-linux-gnu/${pkgver}
  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include
  mv -v ${srcdir}/gcc-dest/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include/ada \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include
  install -vdm755 ${pkgdir}/usr/bin
  mv -v ${srcdir}/gcc-dest/usr/bin/gnat* ${pkgdir}/usr/bin
  install -vdm755 ${pkgdir}/usr/share/info
  mv -v ${srcdir}/gcc-dest/usr/share/info/gnat* ${pkgdir}/usr/share/info
  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/adalib
  install -vm644 ${srcdir}/${pkgbase}-${pkgver}/build/gcc/ada/rts/*.ali \
                 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/adalib
  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/adainclude
  install -vm644 ${srcdir}/${pkgbase}-${pkgver}/build/gcc/ada/rts/*.adb \
                 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/adainclude
  install -vm644 ${srcdir}/${pkgbase}-${pkgver}/build/gcc/ada/rts/*.ads \
                 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/adainclude
  chown -v -R root:root \
    ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/ada{lib,include}
}

package_gcc-go(){
  pkgdesc="The GCC package contains the GNU compiler collection (Go front-end)"
  depends=("gcc=${pkgver}-${pkgrel}")
  options=('!emptydirs')

  install -vdm755 ${pkgdir}/usr/lib
  mv -v ${srcdir}/gcc-dest/usr/lib/libgo.* ${pkgdir}/usr/lib
  mv -v ${srcdir}/gcc-dest/usr/lib/libgo{,lib}begin.a ${pkgdir}/usr/lib
  install -vdm755 ${pkgdir}/usr/bin
  mv -v ${srcdir}/gcc-dest/usr/bin/{{,$CARCH-pc-linux-gnu-}gccgo,go{,fmt}} \
        ${pkgdir}/usr/bin
  install -vdm755 ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}/{cgo,go1} \
        ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  install -vdm755 ${pkgdir}/usr/lib
  mv -v ${srcdir}/gcc-dest/usr/lib/go ${pkgdir}/usr/lib
  install -vdm755 ${pkgdir}/usr/share/man/man1
  mv -v ${srcdir}/gcc-dest/usr/share/man/man1/{gccgo,go,gofmt}.1 \
        ${pkgdir}/usr/share/man/man1
  install -vdm755 ${pkgdir}/usr/share/info
  mv -v ${srcdir}/gcc-dest/usr/share/info/gccgo.info ${pkgdir}/usr/share/info
}

package_gcc-fortran(){
  pkgdesc="The GCC package contains the GNU compiler collection (Fortran front-end)"
  depends=("gcc=${pkgver}-${pkgrel}")
  options=('!emptydirs')

  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/lib/libgfortran* ${pkgdir}/usr/lib
  mv -v ${srcdir}/gcc-dest/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/libcaf* \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/
  mv -v ${srcdir}/gcc-dest/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/finclude \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/
  install -vdm755 ${pkgdir}/usr/bin
  mv -v ${srcdir}/gcc-dest/usr/bin/{,$CARCH-pc-linux-gnu-}gfortran \
        ${pkgdir}/usr/bin
  install -vdm755 ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}/f951 \
        ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  install -vdm755 ${pkgdir}/usr/share/man/man1
  mv -v ${srcdir}/gcc-dest/usr/share/man/man1/gfortran.1 \
        ${pkgdir}/usr/share/man/man1
  install -vdm755 ${pkgdir}/usr/share/info
  mv -v ${srcdir}/gcc-dest/usr/share/info/gfortran.info ${pkgdir}/usr/share/info
}

package_gcc-objc(){
  pkgdesc="The GCC package contains the GNU compiler collection (Objective-C front-end)"
  depends=("gcc=${pkgver}-${pkgrel}")
  options=('!emptydirs')

  install -vdm755 ${pkgdir}/usr/lib
  mv -v ${srcdir}/gcc-dest/usr/lib/libobjc* ${pkgdir}/usr/lib
  install -vdm755 ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  mv -v ${srcdir}/gcc-dest/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}/cc1obj{,plus} \
       ${pkgdir}/usr/libexec/gcc/${CARCH}-pc-linux-gnu/${pkgver}
  install -vdm755 ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include
  mv -v ${srcdir}/gcc-dest/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include/objc \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/plugin/include

}

package_gcc(){
  pkgdesc="The GCC package contains the GNU compiler collection (C and C++ front-ends)"
  depends=("glibc")
  options=('staticlibs')
  groups=('core')

  install -vdm755 ${pkgdir}/usr/
  mv -v ${srcdir}/gcc-dest/usr/* ${pkgdir}/usr/
  install -vdm755 ${pkgdir}/usr/share/gdb/auto-load/usr/lib
  mv -v ${pkgdir}/usr/lib/*gdb.py ${pkgdir}/usr/share/gdb/auto-load/usr/lib
  install -vdm755 ${pkgdir}/lib
  ln -vsf ../usr/bin/cpp ${pkgdir}/lib
  ln -vsf gcc ${pkgdir}/usr/bin/cc
  install -vdm755 ${pkgdir}/usr/lib/bfd-plugins
  ln -sfv ../../libexec/gcc/$CARCH-pc-linux-gnu/${pkgver}/liblto_plugin.so \
          ${pkgdir}/usr/lib/bfd-plugins
  chown -R root:root \
        ${pkgdir}/usr/lib/gcc/$CARCH-pc-linux-gnu/${pkgver}/include{,-fixed}
}

sha256sums=('1cf7adf8ff4b5aa49041c8734bbcf1ad18cc4c94d0029aae0f4e48841088479a'
            '6b8b0fd7f81d0a957beb3679c81bbb34ccc7568d5682844d8924424a0dadcb1b'
            'b942bcac20dea39748b39f8b624d9619f60a8dee2e8195dbe3829c835b0956e6')
