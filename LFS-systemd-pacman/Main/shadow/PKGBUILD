# Maintainer: DJ Lucas <dj_AT_linuxfromscratch_DOT_org>

pkgname=shadow
pkgver=4.5
pkgrel=1
pkgdesc="The Shadow package contains programs for handling passwords in a secure way."
arch=('i686' 'x86_64')
url="http://pkg-shadow.alioth.debian.org/"
license=('GPL')
makedepends=('bash'
             'binutils'
             'coreutils'
             'gcc'
             'gettext>=0.18.2'
             'glibc'
             'grep'
             'make'
             'sed'
             'texinfo')
depends=('bash'
         'acl'
         'linux-pam'
         $( pacman -Q skey && echo 'skey' ) )
optdepends=('skey: add S/Key support')
source=("https://github.com/shadow-maint/${pkgname}/releases/download/${pkgver}/${pkgname}-${pkgver}.tar.xz")
groups=('core')
backup=('etc/default/useradd'
        'etc/login.defs'
        'etc/pam.d/login'
        'etc/pam.d/passwd'
        'etc/pam.d/su'
        'etc/pam.d/chage'
        'etc/pam.d/chfn'
        'etc/pam.d/chgpasswd'
        'etc/pam.d/chpasswd'
        'etc/pam.d/chsh'
        'etc/pam.d/groupadd'
        'etc/pam.d/groupdel'
        'etc/pam.d/groupmems'
        'etc/pam.d/groupmod'
        'etc/pam.d/newusers'
        'etc/pam.d/useradd'
        'etc/pam.d/userdel'
        'etc/pam.d/usermod')
prepare(){
  cd "${pkgname}-${pkgver}"
  sed -i 's/groups$(EXEEXT) //' src/Makefile.in
  find man -name Makefile.in -exec sed -i 's/groups\.1 / /' {} \;
  find man -name Makefile.in -exec sed -i 's/getspnam\.3 / /' {} \;
  find man -name Makefile.in -exec sed -i 's/passwd\.5 / /'   {} \;
  sed -i -e 's@#ENCRYPT_METHOD DES@ENCRYPT_METHOD SHA512@' \
         -e 's@/var/spool/mail@/var/mail@' etc/login.defs
  sed -i 's/1000/999/' etc/useradd
}

build(){
  cd "${pkgname}-${pkgver}"
  ./configure --sysconfdir=/etc \
              --with-group-name-max-length=32
  make
}

package(){
  cd "${pkgname}-${pkgver}"
  make DESTDIR="${pkgdir}" install
  mv -v "${pkgdir}/usr/bin/passwd" "${pkgdir}/bin"
  sed -i 's/yes/no/' ${pkgdir}/etc/default/useradd
  rm -f "${pkgdir}/etc/limits"
  rm -f "${pkgdir}/etc/login.access"

  for FUNCTION in FAIL_DELAY               \
                  FAILLOG_ENAB             \
                  LASTLOG_ENAB             \
                  MAIL_CHECK_ENAB          \
                  OBSCURE_CHECKS_ENAB      \
                  PORTTIME_CHECKS_ENAB     \
                  QUOTAS_ENAB              \
                  CONSOLE MOTD_FILE        \
                  FTMP_FILE NOLOGINS_FILE  \
                  ENV_HZ PASS_MIN_LEN      \
                  SU_WHEEL_ONLY            \
                  CRACKLIB_DICTPATH        \
                  PASS_CHANGE_TRIES        \
                  PASS_ALWAYS_WARN         \
                  CHFN_AUTH ENCRYPT_METHOD \
                  ENVIRON_FILE
  do
    sed -i "s/^${FUNCTION}/# &/" "${pkgdir}/etc/login.defs"
  done

  # login
cat > "${pkgdir}/etc/pam.d/login" << "EOF"
# Begin /etc/pam.d/login

# Set failure delay before next prompt to 3 seconds
auth      optional    pam_faildelay.so  delay=3000000

# Check to make sure that the user is allowed to login
auth      requisite   pam_nologin.so

# Check to make sure that root is allowed to login
# Disabled by default. You will need to create /etc/securetty
# file for this module to function. See man 5 securetty.
#auth      required    pam_securetty.so

# Additional group memberships - disabled by default
#auth      optional    pam_group.so

# include the default auth settings
auth      include     system-auth

# check access for the user
account   required    pam_access.so

# include the default account settings
account   include     system-account

# Set default environment variables for the user
session   required    pam_env.so

# Set resource limits for the user
session   required    pam_limits.so

# Display date of last login - Disabled by default
#session   optional    pam_lastlog.so

# Display the message of the day - Disabled by default
#session   optional    pam_motd.so

# Check user's mail - Disabled by default
#session   optional    pam_mail.so      standard quiet

# include the default session and password settings
session   include     system-session
password  include     system-password

# End /etc/pam.d/login
EOF

  # passwd
cat > "${pkgdir}/etc/pam.d/passwd" << "EOF"
# Begin /etc/pam.d/passwd

password  include     system-password

# End /etc/pam.d/passwd
EOF

  # su
cat > "${pkgdir}/etc/pam.d/su" << "EOF"
# Begin /etc/pam.d/su

# always allow root
auth      sufficient  pam_rootok.so
auth      include     system-auth

# include the default account settings
account   include     system-account

# Set default environment variables for the service user
session   required    pam_env.so

# include system session defaults
session   include     system-session

# End /etc/pam.d/su
EOF

  # chage
cat > "${pkgdir}/etc/pam.d/chage" << "EOF"
# Begin /etc/pam.d/chage

# always allow root
auth      sufficient  pam_rootok.so

# include system defaults for auth account and session
auth      include     system-auth
account   include     system-account
session   include     system-session

# Always permit for authentication updates
password  required    pam_permit.so

# End /etc/pam.d/chage
EOF

  # chfn chgpasswd chpasswd chsh groupadd groupdel groupmems
  # groupmod newusers useradd userdel usermod
  for PROGRAM in chfn chgpasswd chpasswd chsh groupadd groupdel \
                 groupmems groupmod newusers useradd userdel usermod
  do
    install -v -m644 "${pkgdir}/etc/pam.d/chage" \
                     "${pkgdir}/etc/pam.d/${PROGRAM}"
    sed -i "s/chage/$PROGRAM/" "${pkgdir}/etc/pam.d/${PROGRAM}"
  done
}

sha256sums=('fc8c858381ad577a5c25ff5beb6ee60a34f8719c73e4e7c61e74188b4e54b741')
