#!/bin/bash
set -e

PKG_DIR=linux-pam
SRC_DIR=${SRC_ARCHIVE}${SRC_SUBDIRS:+/${PKG_DIR}}
BUILD_DIR=${BUILD_ROOT}${BUILD_SUBDIRS:+/${PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR

PACKAGE=Linux-PAM-1.3.0.tar.bz2
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 http://linux-pam.org/library/Linux-PAM-1.3.0.tar.bz2 ||
    wget -T 30 -t 5 ${FTP_SERVER}svn/l/$PACKAGE
  fi
fi
echo "da4b2289b7cfb19583d54e9eaaef1c3a  $PACKAGE" | md5sum -c -

PACKAGE1=Linux-PAM-1.2.0-docs.tar.bz2
if [[ ! -f $PACKAGE1 ]] ; then
  if [[ -f $SRC_ARCHIVE/$PACKAGE1 ]] ; then
    cp $SRC_ARCHIVE/$PACKAGE1 $PACKAGE1
  else
    wget -T 30 -t 5 http://linux-pam.org/documentation/Linux-PAM-1.2.0-docs.tar.bz2 ||
    wget -T 30 -t 5 ${FTP_SERVER}svn/l/$PACKAGE1
  fi
fi
echo "558378b8be9b8b5c987326f4529f2130  $PACKAGE1" | md5sum -c -
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PACKAGE1 $BUILD_DIR


cd $BUILD_DIR
find . -maxdepth 1 -mindepth 1 -type d | xargs sudo rm -rf
case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       UNPACKDIR=${PACKAGE%.zip}
       unzip -d $UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     UNPACKDIR=$PKG_DIR-build
     mkdir $UNPACKDIR
     cp $SRC_DIR/$PACKAGE $UNPACKDIR
     cp $(find . -mindepth 1 -maxdepth 1 -type l) $UNPACKDIR
     ;;
esac
cd $UNPACKDIR

tar -xf ../Linux-PAM-1.2.0-docs.tar.bz2 --strip-components=1
./configure --prefix=/usr                    \
            --sysconfdir=/etc                \
            --libdir=/usr/lib                \
            --disable-regenerate-docu        \
            --enable-securedir=/lib/security \
            --docdir=/usr/share/doc/Linux-PAM-1.3.0 &&
make
sudo -E sh << ROOT_EOF
install -v -m755 -d /etc/pam.d &&

cat > /etc/pam.d/other << "EOF"
auth     required       pam_deny.so
account  required       pam_deny.so
password required       pam_deny.so
session  required       pam_deny.so
EOF
ROOT_EOF
#make -k check || true
sudo -E sh << ROOT_EOF
rm -fv /etc/pam.d/*
ROOT_EOF
sudo -E sh << ROOT_EOF
make -j1 install &&
chmod -v 4755 /sbin/unix_chkpwd &&

for file in pam pam_misc pamc
do
  mv -v /usr/lib/lib\${file}.so.* /lib &&
  ln -sfv ../../lib/\$(readlink /usr/lib/lib\${file}.so) /usr/lib/lib\${file}.so
done
ROOT_EOF
sudo /sbin/ldconfig


sudo -E sh << ROOT_EOF
install -vdm755 /etc/pam.d &&
cat > /etc/pam.d/system-account << "EOF" &&
# Begin /etc/pam.d/system-account

account   required    pam_unix.so

# End /etc/pam.d/system-account
EOF

cat > /etc/pam.d/system-auth << "EOF" &&
# Begin /etc/pam.d/system-auth

auth      required    pam_unix.so

# End /etc/pam.d/system-auth
EOF

cat > /etc/pam.d/system-session << "EOF"
# Begin /etc/pam.d/system-session

session   required    pam_unix.so

# End /etc/pam.d/system-session
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > /etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# check new passwords for strength (man pam_cracklib)
password  required    pam_cracklib.so   type=Linux retry=3 difok=5 \\
                                        difignore=23 minlen=9 dcredit=1 \\
                                        ucredit=1 lcredit=1 ocredit=1 \\
                                        dictpath=/lib/cracklib/pw_dict
# use sha512 hash for encryption, use shadow, and use the
# authentication token (chosen password) set by pam_cracklib
# above (or any previous modules)
password  required    pam_unix.so       sha512 shadow use_authtok

# End /etc/pam.d/system-password
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > /etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End /etc/pam.d/system-password
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > /etc/pam.d/other << "EOF"
# Begin /etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End /etc/pam.d/other
EOF
ROOT_EOF

cd $BUILD_DIR
[[ -n "$KEEP_FILES" ]] || sudo rm -rf $UNPACKDIR unpacked

exit