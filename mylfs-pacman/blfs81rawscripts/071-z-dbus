#!/bin/bash
set -e

PKG_DIR=dbus
SRC_DIR=${SRC_ARCHIVE}${SRC_SUBDIRS:+/${PKG_DIR}}
BUILD_DIR=${BUILD_ROOT}${BUILD_SUBDIRS:+/${PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR     ###### Getting source

PACKAGE=dbus-1.12.2.tar.gz
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 https://dbus.freedesktop.org/releases/dbus/dbus-1.12.2.tar.gz ||
    wget -T 30 -t 5 ${FTP_SERVER}svn/d/$PACKAGE
  fi
fi
echo "3361456cadb99aa6601bed5b48964254  $PACKAGE" | md5sum -c -


cd $BUILD_DIR        ##### Unpacking source
find . -maxdepth 1 -mindepth 1 -type d | xargs sudo rm -rf
case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       UNPACKDIR=${PACKAGE%.zip}
       unzip -d $UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     UNPACKDIR=$PKG_DIR-build
     mkdir $UNPACKDIR
     cp $SRC_DIR/$PACKAGE $UNPACKDIR
     cp $(find . -mindepth 1 -maxdepth 1 -type l) $UNPACKDIR
     ;;
esac
#######  Building package
cd $UNPACKDIR

sudo -E sh << ROOT_EOF
groupadd -g 18 messagebus &&
useradd -c "D-Bus Message Daemon User" -d /var/run/dbus \\
        -u 18 -g messagebus -s /bin/false messagebus
ROOT_EOF
./configure --prefix=/usr                        \
            --sysconfdir=/etc                    \
            --localstatedir=/var                 \
            --disable-doxygen-docs               \
            --disable-xml-docs                   \
            --disable-static                     \
            --docdir=/usr/share/doc/dbus-1.12.2 \
            --with-console-auth-dir=/run/console \
            --with-system-pid-file=/run/dbus/pid \
            --with-system-socket=/run/dbus/system_bus_socket &&
make
sudo -E sh << ROOT_EOF
make -j1 install
ROOT_EOF
sudo -E sh << ROOT_EOF
chown -v root:messagebus /usr/libexec/dbus-daemon-launch-helper &&
chmod -v      4750       /usr/libexec/dbus-daemon-launch-helper
ROOT_EOF
sudo -E sh << ROOT_EOF
dbus-uuidgen --ensure
ROOT_EOF
make distclean                     &&
./configure --enable-tests         \
            --enable-asserts       \
            --disable-doxygen-docs \
            --disable-xml-docs     &&
make                               &&
make check
sudo /sbin/ldconfig

sudo -E sh << ROOT_EOF
cat > /etc/dbus-1/session-local.conf << "EOF"
<!DOCTYPE busconfig PUBLIC
 "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
<busconfig>

  <!-- Search for .service files in /usr/local -->
  <servicedir>/usr/local/share/dbus-1/services</servicedir>

</busconfig>
EOF
ROOT_EOF

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-dbus
ROOT_EOF

popd


cd $BUILD_DIR
[[ -n "$KEEP_FILES" ]] || sudo rm -rf $UNPACKDIR unpacked

exit